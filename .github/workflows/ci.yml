name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ---------------------------------------
  # 1. Lint & Type-Check (monorepo-wide)
  # ---------------------------------------
  lint:
    name: Lint & Type-Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Lint workspace
        run: yarn lint
      - name: TypeScript check
        run: |
          yarn workspace node tsc --noEmit
          yarn workspace react-app tsc --noEmit
          yarn workspace ng-app tsc --noEmit

  # ---------------------------------------
  # 2. Backend Tests (Node)
  # ---------------------------------------
  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: packages/node
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run Jest tests
        run: yarn test
      - name: Upload Backend Coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-backend
          path: packages/node/coverage

  # ---------------------------------------
  # 3. Frontend Tests (React & Angular)
  # ---------------------------------------
  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        workspace: [react-app, ng-app]
    defaults:
      run:
        working-directory: packages/${{ matrix.workspace }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run tests & coverage
        run: |
          if [ "${{ matrix.workspace }}" = "react-app" ]; then
            yarn test
          else
            yarn test --watch=false --browsers=ChromeHeadless
          fi
      - name: Upload Frontend Coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.workspace }}
          path: packages/${{ matrix.workspace }}/coverage

  # ---------------------------------------
  # 4. E2E Tests (Playwright)
  # ---------------------------------------
  test-e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run E2E tests
        run: yarn e2e
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report

  # ---------------------------------------
  # 5. Coverage Comment (optional)
  # ---------------------------------------
  coverage-comment:
    name: Coverage Comment
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Download coverage artifacts
        uses: actions/download-artifact@v3
        with:
          name: coverage-backend
          path: coverage/backend
      - uses: actions/download-artifact@v3
        with:
          name: coverage-react-app
          path: coverage/react
      - uses: actions/download-artifact@v3
        with:
          name: coverage-ng-app
          path: coverage/ng
      - name: Comment coverage on PR
        run: echo "Coverage comment logic goes here"
